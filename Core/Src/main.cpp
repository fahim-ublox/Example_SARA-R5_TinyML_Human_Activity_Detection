/* USER CODE BEGIN Header */
/**
  ******************************************************************************
  * @file           : main.cpp
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 u-blox
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */
/* Includes ------------------------------------------------------------------*/
#include "main.h"
#include "string.h"
#include "cmsis_os.h"
#include "usb_device.h"
#include "usbd_cdc_if.h"

#ifndef NO_UBX_LIB_PRESENT
// Bring in all of the ubxlib public header files
#include "ubxlib.h"
// Bring in the application settings
#include "u_cfg_app_platform_specific.h"
#endif //NO_UBX_LIB_PRESENT

#ifndef HAL_DRIVERS_ONLY
#include "model_tflite_micro.h"
#include "tensorflow/lite/micro/all_ops_resolver.h"
#include "tensorflow/lite/micro/micro_error_reporter.h"
#include "tensorflow/lite/micro/micro_interpreter.h"
#include "tensorflow/lite/micro/system_setup.h"
#include "tensorflow/lite/schema/schema_generated.h"
#include "tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "tensorflow/lite/micro/kernels/micro_ops.h"

const int NUM_TESTS = 23;

// In 50ms data is taken from accelerometer so 120 float values in array represent 3 values of xyz for 2 seconds.
float test_data[NUM_TESTS][120]={{-0.30646005, -0.74132496, -0.41974417, -0.23702783, -0.65727543, -0.25529946, -1.34794321, -1.64394377, -0.26626245, -0.60611487, -1.26389374, -1.45757312, -0.28818841, -0.01045956, -0.64631246, -0.43070717, -1.19080719, -1.23465912, -1.3150543, -0.51475669, -0.52571966, -0.54399131, -0.27722543, -0.41243552, 0.12475055, -0.41243552, -0.52571966, -0.02142253, -1.92167262, -0.47090476, -0.51475669, -1.66586971, -0.58418888, -0.64631246, -0.41974417, -1.03732546, -0.74863361, -1.501425, -0.64631246, -0.36127495, -1.15411647, -0.18953654, 0.13996175, -0.10716186, -0.09919025, 1.2533477, 1.04342524, 0.07353076, -0.30911253, -1.05579842, -1.19131789, -0.2798828, 0.43225886, 0.35519876, -0.51106313, -0.13639161, 0.51197613, 1.38089533, 0.43225886, -0.80336018, -0.72629999, 0.12401849, -0.89902096, 0.23030812, 0.12401849, -0.25596761, 1.82731243, 0.98496578, -0.14436338, -0.72098548, -1.78122632, 1.50844316, 0.19310685, -0.32505598, -0.32505598, 1.46326997, 0.8414745, -0.0407306, -0.5402929, -1.24180555, 1.21637613, 0.18005648, -0.08307154, -0.19641903, 0.06670902, 0.56867635, 0.30554833, 0.01003528, 0.12338279, 0.30554833, 1.29733865, 0.61320576, -0.13974529, -0.25309278, -0.11545657, -0.17213028, -0.4109696, -1.30965313, -0.43525835, -0.11545657, 0.49985822, 0.54438763, -2.03831546, -0.83197449, -0.03449408, -0.05878283, 0.11123838, -0.3421515, -0.49193208, 0.66987945, 0.30554833, 1.00992188, 0.02217964, -0.19641903, 0.13552709, 0.70226445, 0.05456463, -0.25309278, 0.21244148, 0.44318453}
								,{-0.20460092, -0.20460092, 0.2166286693, 0.2166286693, -0.022157531, -0.022157531, -0.923642512, -0.923642512, 0.1549198759, 0.1549198759, -0.8002249253, -0.8002249253, 0.0127213521, 0.0127213521, -0.3602143989, -0.3602143989, 0.0905280916, 0.0905280916, 0.9651831623, -0.6902222937, -0.6902222937, -0.1133792255, -0.1133792255, -0.1536240908, -0.1536240908, -0.1133792255, -0.1133792255, -0.022157531, -0.022157531, -0.5050959137, -0.011425567, -0.011425567, -0.0006936029, -0.0006936029, 0.0744301455, 0.0744301455, -0.1750880189, -0.1750880189, -1.8090295468, -1.8090295468, -0.0696850512, -0.0696850512, 0.2522196841, 0.2522196841, 1.022840111, 1.022840111, 0.6853278734, 0.6853278734, 0.7380031937, 0.7380031937, 0.3341590713, 0.3341590713, -0.5925363788, -0.5925363788, -1.4763111974, -1.4763111974, -1.2421986627, -1.2421986627, 0.5116944101, -0.7798264066, -0.7798264066, -0.4130501021, -0.4130501021, 0.197593426, 0.197593426, 0.4746265921, 0.4746265921, 0.0200580872, 0.0200580872, 0.1019974743, 0.2522196841, 0.2522196841, 0.2892875021, 0.2892875021, 0.2736799998, 0.2736799998, 0.8121388297, 0.8121388297, 0.8414028966, 0.8414028966, -0.2288040201, -0.2288040201, -0.0466384676, -0.0466384676, 0.0221796353, 0.0221796353, 1.3540123681, 1.3540123681, -0.4919320818, -0.4919320818, 0.568676349, 0.568676349, 0.3500777111, 0.3500777111, 0.1922008972, 0.1922008972, 0.9775368271, 0.9775368271, 4.4022498913, 1.7871617423, 1.7871617423, 0.1557677611, 0.1557677611, 0.0788533793, 0.0788533793, -0.0587828265, -0.0587828265, -0.2976221319, -0.2976221319, -0.1397452883, -0.4474027174, -0.4474027174, -0.7429157639, -0.7429157639, -1.1396319248, -1.1396319248, 0.4634251397, 0.4634251397, 0.4877139169, 0.4877139169}
								,{0.4828746387, -0.5659172541, -1.2748566872, 0.3403558194, -1.0190538311, 0.3403558194, 0.205145736, -0.6572754323, -0.5330283185, 0.7386774948, -1.4502644421, -1.0994489861, -0.5549542845, 0.0735899668, -1.2236961536, 0.1430222059, -0.6572754323, -0.1237436896, 0.3513188427, -0.339348987, -1.0592513952, -0.6353494932, 0.1539851755, -1.848586037, -0.050657147, -0.5257196632, -0.1127807093, -0.1347066699, -0.503793724, -0.9130783153, -0.2479908115, -0.5439913149, -0.4928307276, -1.3552518691, -0.4197441742, -0.6170778414, -0.339348987, 0.1868741111, -0.5549542845, -0.5257196632, 0.45351686, -0.399458894, -0.1603067748, 0.4003719489, 1.7024219768, 1.5509591657, 0.0788453054, 0.1027604861, 0.1399617482, -0.6226674424, 0.902591329, 0.3047112261, -1.063770126, -0.3170842526, 0.4614885869, 1.9708037093, 0.2303081165, -0.0088438856, -0.0460451478, 0.2063931309, 0.5810644904, -0.9282506321, -0.936222359, -0.0699605236, 1.4021533368, 0.2728241234, -0.4047733851, -0.2559676147, -0.2851972865, 0.5119761255, -0.8910491944, -0.7502152679, -0.2347097088, 0.9397925912, 0.7963015069, 0.6182659476, 0.3419124882, -0.4127450535, 0.1691914786, 0.8042732338, -0.35429587, -0.9817550812, -0.159985926, 1.2609056069, -0.3907289823, -0.285477773, -0.8684075931, -0.1397452883, 0.2124414755, 0.0788533793, 0.7710825481, 1.2973386537, -0.3785846115, 0.5200989135, 0.8520450693, 1.3863974241, -0.9453219749, 0.2934039967, 0.2691151898, 1.3175793212, 1.9005089926, -0.4474027174, 0.3176927145, 0.3055483259, 1.9328940487, -0.35429587, 0.0302759142, 0.6253501228, 0.8641894579, 2.0340972374, -0.014253471, 0.2245858641, -0.0466384676, -0.0021090824, -0.0952159626, -1.1193912573, -0.3907289823, 0.2488746115, 1.0584994078, 1.7750172942}
								,{0.6190773214456128, 0.5546855370948612, 0.6083453573871541, 0.6190773214456128, 0.6700541507232911, 0.6083453573871541, 0.6190773214456128, 0.594930402314081, 0.6083453573871541, 0.6244433034748421, 0.6244433034748421, 0.594930402314081, 0.6190773214456128, 0.6083453573871541, 0.6190773214456128, 0.6190773214456128, 0.6083453573871541, 0.6190773214456128, 0.6485902226063739, 0.6593221866648326, 0.5841984382556223, 0.594930402314081, 0.594930402314081, 0.6485902226063739, 0.6190773214456128, 0.6190773214456128, 0.6190773214456128, 0.6244433034748421, 0.6083453573871541, 0.6485902226063739, 0.6244433034748421, 0.6244433034748421, 0.6244433034748421, 0.6244433034748421, 0.6244433034748421, 0.6351752675333007, 0.6244433034748421, 0.6351752675333007, 0.6351752675333007, 0.6351752675333007, 0.13126154115540173, 0.16832935915701544, 0.16832935915701544, 0.1527218568405466, 0.14881998126142915, 0.1527218568405466, 0.1527218568405466, 0.16832935915701544, 0.1527218568405466, 0.14881998126142915, 0.16052560799878085, 0.14881998126142915, 0.13906529231363632, 0.14881998126142915, 0.16052560799878085, 0.16052560799878085, 0.1527218568405466, 0.16052560799878085, 0.14881998126142915, 0.1527218568405466, 0.16832935915701544, 0.14881998126142915, 0.16052560799878085, 0.14881998126142915, 0.1527218568405466, 0.16052560799878085, 0.1527218568405466, 0.16052560799878085, 0.1527218568405466, 0.13906529231363632, 0.16052560799878085, 0.16832935915701544, 0.14881998126142915, 0.1527218568405466, 0.16832935915701544, 0.14881998126142915, 0.14881998126142915, 0.14881998126142915, 0.14881998126142915, 0.1527218568405466, -0.13974528830450325, -0.19641903236522604, -0.11545657057105717, -0.18427464377735361, -0.15188967689237573, -0.13974528830450325, -0.15998592604390752, -0.15188967689237573, -0.13974528830450325, -0.15188967689237573, -0.15998592604390752, -0.15188967689237573, -0.13974528830450325, -0.13974528830450325, -0.11545657057105717, -0.15998592604390752, -0.13974528830450325, -0.13974528830450325, -0.15998592604390752, -0.15188967689237573, -0.15998592604390752, -0.13974528830450325, -0.15998592604390752, -0.1276009294377802, -0.15188967689237573, -0.1276009294377802, -0.15998592604390752, -0.13974528830450325, -0.1276009294377802, -0.15998592604390752, -0.13974528830450325, -0.13974528830450325, -0.15188967689237573, -0.13974528830450325, -0.15998592604390752, -0.15998592604390752, -0.13974528830450325, -0.15188967689237573, -0.15188967689237573, -0.15188967689237573}
								,{0.6351752675333007, 0.3507782199841477, 0.3802911211449089, 0.5546855370948612, -0.17508801888032374, 0.07443014547883879, 0.6888350878255938, 0.9142063330532244, -0.17508801888032374, 0.23809259737033242, 0.6244433034748421, 0.35882719302799176, 0.7907887463809504, 1.1503095423393135, 0.6083453573871541, 1.2656781559677432, -1.3475550922669257, -0.464851048458706, -0.9451064400747284, -0.4809489945463939, 0.11467501069805852, 0.4205359863641287, 0.6888350878255938, 0.2273606333118738, 0.2273606333118738, 0.5439535730364026, 0.471512815641807, 0.4419999144810459, 0.533221608977944, 0.09052809156652665, 0.7505438811617307, 0.2890694266480108, -0.4192402012102569, 0.3802911211449089, 0.6083453573871541, 0.35882719302799176, 0.8954253959509217, -0.28777364149413903, 1.4695854730784572, 1.7593485026568394, 1.2823148369949782, -0.2277110121233814, 0.25221968410803536, 1.5593480031123004, 1.0306438621419185, 0.9526063505595742, 0.9487044749804571, 0.24441593294980077, -0.3311107149699873, -0.41305010213144866, -0.4364613556061519, -0.6061929432977505, 0.11565403883893288, -0.45792167129129663, 0.33415907126949673, 1.8968602407059383, 0.9389497860326639, -0.3174541504430772, -0.34671821728645613, -0.9593126832078579, -0.7798264065684664, 0.3048950044261176, -0.0911453668542789, -0.3545219684446905, -0.3545219684446905, -0.09894911801251349, 0.3712268892711101, 0.9857722929820705, 1.5008198694255421, 0.8199425808695892, 0.7009353757065141, 0.004450584834092391, -0.24722039001896737, -0.19844694528000226, -0.30184664812660833, -0.5242535561362891, -0.15942818948883014, -0.3389144661282217, 0.8648141500294368, 1.5886120699556792, 2.10291537001602, 1.2487611885534349, 0.9208631722192695, 1.2487611885534349, 0.45128078087272244, -0.7307713872028784, -0.844118875324324, 0.2934039967207253, -0.08307154424378048, 1.3985418127173486, -0.13974528830450325, -0.572894564413387, 0.13552709368413055, -0.19641903236522604, 0.8277562029526305, 2.548208924744523, 1.9693274224820663, 0.39460700709085017, 0.7022644451279101, -0.2773815238805443, -0.5364614462036088, 0.6132057639033588, 1.7061991913121095, 0.933007560807142, 0.933007560807142, 0.4310401431333182, 0.23673019321770367, 0.6820238668308047, 1.4552155270569218, -1.5727812097987401, -0.5162208262968941, -0.24094839972653614, -0.08307154424378048, 1.3297237097899026, 0.8844299767345027, -1.3096531272345304, -0.8886482010760248, -0.4676433373319331, 1.5685629854572178, 2.4105726594473325}
								,{-0.5668047070140627, -0.6070495722332825, -0.5963176081748238, -0.5963176081748238, -0.5668047070140627, -0.5829026531017506, -0.5668047070140627, -0.5829026531017506, -0.6070495722332825, -0.5829026531017506, -0.5775366710725213, -0.6070495722332825, -0.6365624733940436, -0.617781536291741, -0.6285135003501997, -0.6365624733940436, -0.6365624733940436, -0.6365624733940436, -0.6580264015109608, -0.6580264015109608, -0.6365624733940436, -0.6472944374525021, -0.679490329627878, -0.6365624733940436, -0.5775366710725213, -0.5829026531017506, -0.617781536291741, -0.6365624733940436, -0.5319258238240722, -0.5050959136779257, -0.556072742955604, -0.5829026531017506, -0.5426577878825308, -0.556072742955604, -0.5668047070140627, -0.556072742955604, -0.556072742955604, -0.5265598417948429, -0.5829026531017506, -0.617781536291741, 0.18588779926304286, 0.18588779926304286, 0.16832935915701544, 0.16832935915701544, 0.16052560799878085, 0.17808404810480827, 0.17808404810480827, 0.18588779926304286, 0.18588779926304286, 0.17808404810480827, 0.16832935915701544, 0.1527218568405466, 0.16832935915701544, 0.19369155042127711, 0.16832935915701544, 0.16052560799878085, 0.16052560799878085, 0.14881998126142915, 0.16052560799878085, 0.1527218568405466, 0.16832935915701544, 0.1527218568405466, 0.16832935915701544, 0.1527218568405466, 0.1527218568405466, 0.14881998126142915, 0.16832935915701544, 0.21515186610642165, 0.19759342600039423, 0.17808404810480827, 0.17808404810480827, 0.16832935915701544, 0.18588779926304286, 0.18588779926304286, 0.2073481149481874, 0.18588779926304286, 0.16832935915701544, 0.18588779926304286, 0.19369155042127711, 0.18588779926304286, 0.26101894067229925, 0.26101894067229925, 0.2812595784117035, 0.2488746115267256, 0.26101894067229925, 0.26101894067229925, 0.269115189823831, 0.2812595784117035, 0.2812595784117035, 0.2934039967207253, 0.2488746115267256, 0.269115189823831, 0.26101894067229925, 0.2934039967207253, 0.2812595784117035, 0.2488746115267256, 0.269115189823831, 0.2488746115267256, 0.26101894067229925, 0.269115189823831, 0.269115189823831, 0.2934039967207253, 0.305548325866299, 0.305548325866299, 0.3176927144541714, 0.269115189823831, 0.2488746115267256, 0.2812595784117035, 0.305548325866299, 0.269115189823831, 0.23673019321770367, 0.269115189823831, 0.269115189823831, 0.2812595784117035, 0.26101894067229925, 0.22458586407213013, 0.22458586407213013, 0.20434522633272587, 0.22458586407213013, 0.2124414754842576}
								,{0.7204058699244744, 0.1247505541748815, -0.19683023219125878, -0.3503119673581566, 0.9652456760215432, 0.5742327364309376, 1.1187275185080816, 1.2320117164172575, 0.6180846952599358, 0.2453433537574184, 0.6875169343401135, -0.0725831129911043, 0.5157635205953972, -0.2552994641247454, 1.1625793968473495, 0.8227269909291928, 1.0894928435155358, 1.3964563406792416, -0.19683023219125878, 0.7825294268415607, -0.09085474864106662, 1.3562588034215197, -0.2260648481580021, 0.3805534371764078, 0.18687411109196772, 0.811764048174286, 1.0675669848356324, 0.6253933505931172, 0.1759111146772407, 0.7898380553448319, -0.12374368959140954, 1.100455813100353, 0.2891952589265962, 0.8227269909291928, 0.29650391425977757, 1.367221853496067, 1.4805059172556925, 0.011466417974498988, 0.811764048174286, 0.02242939024230692, -0.7953884520344384, -0.5243493471817565, 0.9318208642558379, 0.3419124882327606, 0.2967394991844258, -0.003529336006538847, 0.2143648578021139, 0.8707042263098932, 0.5943507669184538, 0.5890362172859172, -0.726299989639689, -0.5854660631652125, 0.9530788676922052, 0.27282412338490064, 0.5438632282375824, -0.2347097088027543, 0.18513512746383096, 0.8281884145309375, 1.25334770288317, -0.05401687468741026, -0.8246180653164538, 0.27282412338490064, 0.8866477776606135, -0.1443633795372828, 0.02038584469920715, -0.09121852702138736, 0.3631704916691279, 0.7590998545892987, 1.2692911566870009, -0.5402928985324768, -0.7342717360509823, 1.3888670602157318, 0.6846971352026809, 0.22233658470402923, -0.19750815401566663, -0.016815612540991134, 0.7670716790381037, 1.2613194297850854, -0.003529336006538847, -1.0797136383277934, -0.524317072476311, 0.5322432723880407, 1.273050054892628, -1.1072469578885336, -0.6417126643687179, -1.0141400777853429, -0.6052795521031695, -1.2205943568465307, -1.038428795518789, -0.37858461152565764, -0.7995895198514736, 0.7265533114671034, 1.0665956569468422, -0.9696106925913431, -0.6498089105481348, -1.3096531272345304, -0.4919320818144136, -1.0708137921249163, -1.7913799666112489, -0.8805519816456424, -0.9250813371184928, 1.1030287335470115, -0.08307154424378048, -1.2651237420405306, -0.6052795521031695, -0.7550601435738187, -0.6174239228583522, -1.1193912573129576, -0.8886482010760248, -0.5931351813479867, 0.05456463188996176, 0.9896812751467152, -1.2894124894951262, -1.1193912573129576, -1.2894124894951262, -0.6983863905967511, -0.7995895198514736, -1.7428023230963108, -0.7064826397482828, -1.0262844366520658}
								,{0.11467501069805852, 0.4205359863641287, 0.6888350878255938, 0.2273606333118738, 0.2273606333118738, 0.5439535730364026, 0.471512815641807, 0.4419999144810459, 0.533221608977944, 0.09052809156652665, 0.7505438811617307, 0.2890694266480108, -0.4192402012102569, 0.3802911211449089, 0.6083453573871541, 0.35882719302799176, 0.8954253959509217, -0.28777364149413903, 1.4695854730784572, 1.7593485026568394, 0.07443014547883879, -0.2260648481580021, -0.26630971337722187, -0.7492480960078588, -0.18581998293878232, 0.023453316201160417, 0.19516474113649804, -0.4407041293271741, 0.3293142918672305, 1.2039693626316068, 0.2890694266480108, -0.022157531047288653, 0.6244433034748421, -0.2475287762749193, 0.1871157680926541, 0.48224477970026564, -0.3682633719325786, 0.06369818142038018, 0.6244433034748421, 1.008111018564737, -0.7798264065684664, 0.3048950044261176, -0.0911453668542789, -0.3545219684446905, -0.3545219684446905, -0.09894911801251349, 0.3712268892711101, 0.9857722929820705, 1.5008198694255421, 0.8199425808695892, 0.7009353757065141, 0.004450584834092391, -0.24722039001896737, -0.19844694528000226, -0.30184664812660833, -0.5242535561362891, -0.15942818948883014, -0.3389144661282217, 0.8648141500294368, 1.5886120699556792, 1.986603379025634, 0.03371465167747152, -0.6842304548800947, -0.8090904734118454, -1.199278031323566, -1.101731141845636, 1.2452470189933649, 0.16052560799878085, -0.49498948929291, -0.48718573813467575, 0.35561938695464124, 1.54569143858539, 1.5222801851106866, 0.6404563042301976, 0.6853278733900452, -0.3545219684446905, 0.1527218568405466, 0.23466124400200797, 0.16832935915701544, -0.2842882080205809, -0.5364614462036088, 0.6132057639033588, 1.7061991913121095, 0.933007560807142, 0.933007560807142, 0.4310401431333182, 0.23673019321770367, 0.6820238668308047, 1.4552155270569218, -1.5727812097987401, -0.5162208262968941, -0.24094839972653614, -0.08307154424378048, 1.3297237097899026, 0.8844299767345027, -1.3096531272345304, -0.8886482010760248, -0.4676433373319331, 1.5685629854572178, 2.4105726594473325, 1.0908843746802883, 0.8075158029824215, 0.010035276417111407, -0.21665965821617056, -0.4797877098703848, -0.7064826397482828, 0.7508419103159517, 2.264840055835162, 0.7508419103159517, -0.2530927764259488, 0.9087187836313971, 0.3298370435997451, 1.2406649988442018, -1.358230592422572, -1.528251794883591, 0.23673019321770367, -0.034494079055738945, 0.22458586407213013, 0.771082548055356, 0.5565320198426361}
								,{3.515966038512996, -2.5173279060766522, 2.426976474358708, -0.021422525658834967, 3.40268184060382, 0.9360111888383686, 0.7094428735097474, -0.9642389294896759, 1.6961112093396766, -0.4014725493244439, -1.4685359864997272, 0.48287463867085656, 0.15398517550760682, 0.1759111146772407, 1.747271716182215, 1.038332309843087, 1.5207034276835039, 2.547569408090796, 0.15398517550760682, 2.631618931007426, 2.1382847630924613, 1.2027770414247116, 0.1759111146772407, -1.2931283658230155, 2.467174387235172, -1.8814750530693374, 0.029738042892497252, -1.5306595702467234, 0.5742327364309376, -0.0725831129911043, -0.3905095636416809, 2.51833473309825, 0.26726929292705226, 2.3538901893259965, -1.4904620061590912, 2.014037595598469, -1.5927831539937198, 1.9628769814362892, -0.3283860067245946, 0.16494814509242375, 1.9096872664847286, 0.057587301939405436, -1.3480953708173176, -0.42868854632126, 1.9256307202885594, -1.3188656599884125, 2.156810995537885, -2.6926614056280957, 1.3888670602157318, -0.5190348950961093, 0.5066615759036053, -0.6837840803138437, -0.9654520893378198, 2.156810995537885, 0.8786759532118086, 1.7077365264799063, 1.13377160426066, -1.1833461855995833, 1.3729236064119013, 1.9708037093368942, -1.3480953708173176, 2.1355527970077386, -1.0026535075592622, -0.9973389969454814, 1.550959165710977, 0.14793347512985386, -1.154116474770678, -3.4340327878813453, 1.3436939736205078, -2.13198268190579, 0.535891501335667, -1.2418055487292592, -1.0929998368247338, 1.4845279781324956, 1.1045417763754874, 2.090380003053183, -0.26393934159414767, -1.2497773146499305, -1.3108939330864973, 1.1922308698434467, 1.179943085625989, 0.953248109383098, -0.35429587001529206, -2.394550364934048, 1.2285205508140307, 0.48771391691519034, 1.2406649988442018, -1.9249680033086503, 3.0380321915996698, -2.5969565640011942, 1.341868098377775, 0.6577351193762092, -0.3340552530806924, 1.7871617422697268, 0.37436642879374477, -0.6498089105481348, 2.0260008990524447, -0.1276009294377802, -0.7064826397482828, 1.2973386537414764, 0.3298370435997451, 0.8277562029526305, 0.7386976703338263, 0.49985821633961447, 1.9693274224820663, 0.576772627860891, 0.7832269663643779, -3.6130355798886686, 0.2812595784117035, -2.6091008337044688, 1.4997448528086226, 0.022179635283834445, 0.4188958139877445, 0.8075158029824215, -0.5809908105928039, 0.9208631722192695, 0.3622220402058724, 0.0990940170839615, 0.030275914156515683, -1.2448831043011264}
								,{-0.0725831129911043, 2.807026712663598, 0.811764048174286, 1.4074193639238788, -1.6147090931633534, 0.9360111888383686, -0.8728807512398644, 0.8336900141738299, 0.26726929292705226, 1.3050982697490707, 2.218680052247186, -1.2748566872451972, -0.24799081147455507, 0.8227269909291928, 0.48287463867085656, 1.1735424469218967, 1.3964563406792416, 1.100455813100353, 0.4938375814257634, 0.6984799039249304, -1.099448986078755, 0.8738876855811027, 1.509740458098687, 1.0894928435155358, 0.9981347457554548, -0.3612749476749376, 1.8605558336016605, -1.5927831539937198, 1.2429746860020743, 2.2406059914168206, -0.0506571469915603, 1.8897905354241165, 0.6363563201779341, 0.7313688126793813, 0.8848506551659195, -1.3150543049926493, 0.9140851691790044, 1.882481853261025, 0.9652456760215432, 0.8958135174310959, -0.8777629958698608, 1.8884292630483608, 0.7086123159084273, -2.2967318476141463, -3.208166964717666, -0.003529336006538847, -1.0026535075592622, 1.1098562284611349, 1.125799779811855, -1.669622022934997, 0.4694603137571861, 2.156810995537885, -1.7971697813471625, 0.116046762615971, 0.2967394991844258, 1.0726549663147154, -0.5562363133175519, -1.8556291834955947, -1.3773250621368445, -1.6616502874489554, -2.437565871635512, 1.2294323270836447, 1.8671712596119934, 0.7750435034869082, -0.3463139829764596, -2.0124066418114137, -0.12841986720531828, -2.3339333048543445, 1.468584524328665, 1.582846073318639, 0.6315522241586521, -1.0345404541856797, -0.6306391692698146, 2.156810995537885, -1.2205476038210257, -2.8574106103552084, -1.1222295476536386, 1.7024219768473696, 0.34988421513467594, -1.8396857101823858, -0.86840759305777, -0.4919320818144136, 1.0584994077953107, -0.42311397591485284, -1.7792355185810775, 2.0583859551008703, -2.163807249254816, -0.6983863905967511, 0.4188958139877445, -0.4474027174252184, -1.2205943568465307, -0.6619532842754324, 0.14767151199315245, -0.5040764537584423, -2.0059304056605205, -0.5607501877139743, 0.12338279425970639, -0.24094839972653614, -1.4918186885622724, 0.6698794485217828, -1.5161074360168678, -0.41096959921544013, -0.8805519816456424, 0.4188958139877445, 0.5200989135213177, -0.7753007515920736, -1.038428795518789, -1.5970699275321862, -0.26523713529267184, -1.9371122730119252, -0.26523713529267184, -0.22880402005500852, -1.1072469578885336, 0.23673019321770367, -0.86840759305777, -2.4026465249221314, -0.4595470911525162, -0.6052795521031695, 0.37436642879374477, -0.5364614462036088}
								,{1.0602583026725412, -1.9435986099864238, -0.5659172540761587, -0.8217201370776849, 3.8558183639414216, 2.51833473309825, 1.1114188631749002, -2.228636087490765, 2.280803367695081, -0.799794197908051, 2.4452481797664367, -0.7595966069905089, -1.6220178289862652, 3.453842723065101, 0.0735899668426122, 1.6741852701700424, -0.7705595765753257, 0.9031221727642773, 0.8629246086766451, 3.340558256856824, 1.7070741789244934, 0.9542827064367262, -2.5173279060766522, -0.9971278382441268, 0.5449981419281226, 0.7386774948424727, -2.6415750735706447, 0.6253933505931172, -2.1774755806482258, -1.6951043823180787, 1.0602583026725412, 0.9762087529260007, -1.6658697073255329, 1.8605558336016605, -2.1774755806482258, 2.2113713164242745, 1.4805059172556925, 0.5230721759285785, 2.1492477326772783, 0.4719116154262194, 0.04164384813557477, -2.894612028576651, -1.8024842724515655, 0.6102942207222848, 1.6333334169057312, -1.047826672191998, 1.13377160426066, 2.156810995537885, 2.0664646272536578, 0.16919147856622113, -1.1674027122863746, -0.8910491943668013, 1.364951977056875, 2.1275810701058235, -0.30911252573626147, -1.273692495355677, 2.0611502727149005, 2.1063234568570137, 0.15324802476239047, 1.5589308926128922, -1.0185969613630932, 1.3118069684659566, 2.156810995537885, -1.7068234540326288, 0.8866477776606135, -1.6403923269332192, 0.6262376745261155, -1.3029222061845818, 2.156810995537885, -2.610286764245784, 1.4552980527004342, -1.6988517193269623, 0.6767254083007657, -1.4224982267695803, 2.156810995537885, 2.1355527970077386, 1.25334770288317, 0.9238493324477014, -1.3108939330864973, -1.3108939330864973, -0.5486058169587915, -2.0383154617089465, -0.9007926193850467, 0.1800564788781304, 0.3500777110602987, 0.3865108173816172, -1.9735454387755424, 0.5322432723880407, -0.5162208262968941, 0.5565320198426361, -0.09521596255280233, 1.4228304710084956, -1.6658880304596317, -0.21665965821617056, 0.5443876312547637, 0.4634251397394455, -1.552540512617037, -0.07092718537705744, -1.7428023230963108, 0.9653924682498208, 0.3865108173816172, -1.8237648443327785, 0.7953713549522503, -0.6498089105481348, 3.118994385903494, -2.7669777070199144, 0.2488746115267256, 0.8075158029824215, 1.0463549597651391, -0.6417126643687179, 2.7425189638235854, -2.5200422119222163, 0.9977775242982471, 0.5120026346486364, -1.9249680033086503, -0.35429587001529206, -1.3703749810104444, 1.7871617422697268, 0.010035276417111407, 0.15576776114468432}
								,{-0.6463124627411532, -2.086117321908684, -1.3369803514819238, 0.5851957596755749, -0.7595966069905089, 0.5669241347575766, 0.23803467159432692, -0.3393489870413756, 0.6180846952599358, -0.3795465833248999, 1.2539375482672508, -1.388140885154373, 1.2649005446819777, -0.09085474864106662, -1.4904620061590912, -0.6901643679103312, -1.0884860164939383, -0.8436461567370491, -1.5123879989885451, 0.8629246086766451, 0.22707170200951, 0.3805534371764078, 0.3805534371764078, 1.2758635947565253, -0.781522599819963, -1.7572279660650751, 0.22707170200951, -1.0702143915759401, 1.3160611051843372, 0.4317139976787669, 1.3050982697490707, -1.1725355662404784, 1.1918140718398949, -0.20413888484144913, -1.9837961740740555, -0.2881884077580793, -1.4502644420714588, -0.3612749476749376, -0.3612749476749376, -0.14201532524137186, -3.178937195360628, 0.9397925911577532, 0.849446222873526, -1.199289639403414, -0.49511973389974107, 2.156810995537885, -2.7006331325300112, 1.1045417763754874, 1.7024219768473696, 1.9920617127732614, -0.9229361605025965, 1.3941816098482684, 1.2081743236472773, -3.178937195360628, -0.3170842526381768, 0.08681703227768839, -0.9813955431416507, -1.4969010905255942, 1.9336024471904747, 1.1922308698434467, -1.8024842724515655, 1.30649241883342, 1.9628319824349787, -0.7581869947942401, -1.3029222061845818, 2.156810995537885, -2.049608079542234, -1.616477120865282, 1.3197786953678723, 2.1116380064895504, -0.8405615776484183, -0.09121852702138736, 1.5297011622746097, -2.9690148650195356, 1.6572487927052564, 1.364951977056875, -0.8777629958698608, -1.526130793550748, 2.156810995537885, -2.0868095172730543, -3.200127081208591, -2.370261587758303, -0.7429157639022911, 0.11123837595068446, -0.4797877098703848, 1.7750172942395555, -1.3096531272345304, 2.447005736047502, 1.1151730924137344, 0.8965743356012257, -0.13974528830450325, -1.5161074360168678, 1.7183436096211313, -3.1434533074267192, -3.770912245156068, -1.1193912573129576, 0.6010613455943372, -0.10331218198318476, -1.9735454387755424, 2.183877861531338, -0.10331218198318476, 1.7628728759305334, 0.8844299767345027, -0.5162208262968941, -0.18427464377735361, 1.4106862013052208, -0.3664402407704749, 1.1718468661956067, -0.18427464377735361, 1.1030287335470115, -0.026397829904207085, -0.6740976550306154, 2.2162629175797637, -2.734592650971488, -1.7913799666112489, -0.2530927764259488, 0.4188958139877445, -0.572894564413387, 1.7952579617001092, -1.1193912573129576}
								,{-0.4299721652687155, -0.4407041293271741, -0.4192402012102569, -0.4514360933856327, -0.4407041293271741, -0.4192402012102569, -0.4407041293271741, -0.4407041293271741, -0.4192402012102569, -0.38972730004949574, -0.38972730004949574, -0.41119122816641296, -0.40045926410795435, -0.40045926410795435, -0.37899533599103713, -0.40045926410795435, -0.38972730004949574, -0.38972730004949574, -0.4299721652687155, -0.4407041293271741, -0.47021703048793534, -0.47021703048793534, -0.40045926410795435, -0.31728654265490025, -0.28777364149413903, -0.3280185067133588, -0.3387504707718174, -0.37899533599103713, -0.41119122816641296, -0.464851048458706, -0.5050959136779257, -0.4916809586048525, -0.47021703048793534, -0.4809489945463939, -0.4407041293271741, -0.40045926410795435, -0.37899533599103713, -0.3682633719325786, -0.36021439888873463, -0.38972730004949574, 0.18588779926304286, 0.16052560799878085, 0.17808404810480827, 0.19369155042127711, 0.17808404810480827, 0.19369155042127711, 0.19369155042127711, 0.18588779926304286, 0.17808404810480827, 0.16832935915701544, 0.16832935915701544, 0.17808404810480827, 0.18588779926304286, 0.19369155042127711, 0.18588779926304286, 0.16832935915701544, 0.17808404810480827, 0.16832935915701544, 0.17808404810480827, 0.17808404810480827, 0.14881998126142915, 0.19759342600039423, 0.16832935915701544, 0.18588779926304286, 0.2307593684228905, 0.2073481149481874, 0.2073481149481874, 0.19369155042127711, 0.17808404810480827, 0.16052560799878085, 0.16052560799878085, 0.14881998126142915, 0.1527218568405466, 0.19759342600039423, 0.18588779926304286, 0.19369155042127711, 0.16052560799878085, 0.1527218568405466, 0.2073481149481874, 0.2073481149481874, 0.2934039967207253, 0.269115189823831, 0.305548325866299, 0.2812595784117035, 0.2812595784117035, 0.269115189823831, 0.2934039967207253, 0.305548325866299, 0.305548325866299, 0.2934039967207253, 0.2812595784117035, 0.305548325866299, 0.305548325866299, 0.3176927144541714, 0.305548325866299, 0.305548325866299, 0.2934039967207253, 0.305548325866299, 0.305548325866299, 0.305548325866299, 0.2934039967207253, 0.3176927144541714, 0.2488746115267256, 0.23673019321770367, 0.2124414754842576, 0.22458586407213013, 0.2934039967207253, 0.269115189823831, 0.3298370435997451, 0.3298370435997451, 0.3298370435997451, 0.3298370435997451, 0.305548325866299, 0.3298370435997451, 0.305548325866299, 0.26101894067229925, 0.23673019321770367, 0.26101894067229925, 0.3176927144541714, 0.305548325866299}
								,{0.6083453573871541, 0.6351752675333007, 0.6485902226063739, 0.6351752675333007, 0.6351752675333007, 0.6485902226063739, 0.6351752675333007, 0.6351752675333007, 0.6593221866648326, 0.6190773214456128, 0.6351752675333007, 0.6485902226063739, 0.6593221866648326, 0.6351752675333007, 0.6485902226063739, 0.6351752675333007, 0.6485902226063739, 0.6485902226063739, 0.6593221866648326, 0.6351752675333007, 0.6485902226063739, 0.6083453573871541, 0.6485902226063739, 0.6485902226063739, 0.6351752675333007, 0.6351752675333007, 0.6351752675333007, 0.6351752675333007, 0.6190773214456128, 0.6700541507232911, 0.6083453573871541, 0.6485902226063739, 0.6351752675333007, 0.6593221866648326, 0.6351752675333007, 0.6485902226063739, 0.6351752675333007, 0.6190773214456128, 0.6190773214456128, 0.6485902226063739, 0.16052560799878085, 0.14881998126142915, 0.1527218568405466, 0.1527218568405466, 0.14881998126142915, 0.1527218568405466, 0.16832935915701544, 0.14881998126142915, 0.14881998126142915, 0.16052560799878085, 0.1527218568405466, 0.14881998126142915, 0.14881998126142915, 0.1527218568405466, 0.16052560799878085, 0.1527218568405466, 0.1527218568405466, 0.16052560799878085, 0.14881998126142915, 0.14881998126142915, 0.1527218568405466, 0.16052560799878085, 0.1527218568405466, 0.1527218568405466, 0.1527218568405466, 0.1527218568405466, 0.14881998126142915, 0.1527218568405466, 0.13906529231363632, 0.14881998126142915, 0.16832935915701544, 0.16052560799878085, 0.16052560799878085, 0.14881998126142915, 0.16052560799878085, 0.1527218568405466, 0.1527218568405466, 0.16832935915701544, 0.16832935915701544, 0.13906529231363632, -0.19641903236522604, -0.1276009294377802, -0.1276009294377802, -0.13974528830450325, -0.15998592604390752, -0.17213028491063057, -0.13974528830450325, -0.17213028491063057, -0.13974528830450325, -0.13974528830450325, -0.17213028491063057, -0.15188967689237573, -0.15188967689237573, -0.15188967689237573, -0.15998592604390752, -0.15188967689237573, -0.15188967689237573, -0.13974528830450325, -0.15998592604390752, -0.13974528830450325, -0.17213028491063057, -0.15998592604390752, -0.15188967689237573, -0.15188967689237573, -0.15188967689237573, -0.17213028491063057, -0.15188967689237573, -0.13974528830450325, -0.13974528830450325, -0.15998592604390752, -0.11545657057105717, -0.13974528830450325, -0.13974528830450325, -0.13974528830450325, -0.15998592604390752, -0.15188967689237573, -0.15998592604390752, -0.15998592604390752, -0.15998592604390752, -0.15998592604390752}
								,{0.8446530105885571, -0.6974730500734225, 0.3695904407616807, -0.2151018667680247, -0.9569302741564946, 0.0735899668426122, -0.1749042688747058, -1.1834985089953853, 0.4024794031759518, -1.0373254559915792, -0.2881884077580793, 0.5681004921679345, 1.5205623023561354, 0.6700541507232911, 0.8739614678340045, 0.028819298230389694, -0.11337922554418678, 0.09052809156652665, 1.9417918916506356, 3.135722893154155, 1.912278990489874, 0.4419999144810459, 0.9651831623309028, -0.18581998293878232, 0.09052809156652665, 0.5734664741971638, 0.23809259737033242, 0.7612758452201893, 1.1288456142223962, 1.1905544075585333, 1.118113650163938, 1.008111018564737, 2.1054543435421293, -0.0006936029303714591, 0.8524975397170873, 0.6485902226063739, 0.6807861147817498, 1.077868784944718, 0.5224896449194854, 0.27833746258955216, 2.0372348969153746, 0.07884530537577306, -0.7714731542724248, -0.2347097088027543, 2.143524523909654, 0.4535168599533551, -0.8405615776484183, 0.7909869572907392, -0.3755436352772309, 0.4322588565169878, 0.20639313090019856, 0.40049095611448926, 0.38683439158757893, 0.14881998126142915, -0.6764267037218603, -0.5691251252961371, -0.15942818948883014, 0.16052560799878085, -0.2277110121233814, 1.3349901573130605, 1.5515442519540654, 0.004450584834092391, -0.1886922563322093, -0.6315551345620123, -1.1173386441621047, -0.5476648096109924, 0.22295561726465624, -0.5242535561362891, -0.2725825812832292, 0.012254335992326988, 1.0891719958286763, 0.7458069448663621, 1.0306438621419185, 1.0443004266688283, 0.33415907126949673, -0.2725825812832292, -0.17308475401574044, -0.15942818948883014, -0.5554685607692268, -0.6315551345620123, 2.001712181318998, -0.4919320818144136, -0.1276009294377802, 0.2124414754842576, 0.23673019321770367, 0.20434522633272587, -0.29762213189879916, 0.9653924682498208, -0.08307154424378048, -0.41096959921544013, -0.8319744867364516, -0.6498089105481348, 1.1232694307287145, -0.572894564413387, -0.7064826397482828, -0.8238782375849196, -0.856263234191047, -0.20856341203675366, -0.22880402005500852, 1.1354137895954377, 0.7386976703338263, 0.4310401431333182, 0.1922008971871522, -0.24094839972653614, -0.3340552530806924, -0.37858461152565764, 1.022066242031693, -0.014253471037484047, -0.07092718537705744, 0.5443876312547637, 0.933007560807142, -0.8238782375849196, -0.844118875324324, -1.4594336622349955, -0.22880402005500852, -0.6740976550306154, -0.17213028491063057, 0.022179635283834445, -0.4919320818144136, -0.7874451312636012}
								,{-0.4299721652687155, -0.4514360933856327, -0.4407041293271741, -0.4407041293271741, -0.4514360933856327, -0.47021703048793534, -0.4514360933856327, -0.464851048458706, -0.4407041293271741, -0.4407041293271741, -0.4299721652687155, -0.41119122816641296, -0.4407041293271741, -0.5158278777363844, -0.47021703048793534, -0.36021439888873463, -0.3387504707718174, -0.464851048458706, -0.5426577878825308, -0.4514360933856327, -0.3682633719325786, -0.349482434830276, -0.464851048458706, -0.5319258238240722, -0.40045926410795435, -0.38972730004949574, -0.4192402012102569, -0.464851048458706, -0.464851048458706, -0.4407041293271741, -0.4299721652687155, -0.4407041293271741, -0.4299721652687155, -0.4407041293271741, -0.4299721652687155, -0.4192402012102569, -0.41119122816641296, -0.4299721652687155, -0.4299721652687155, -0.4299721652687155, 0.17808404810480827, 0.16832935915701544, 0.16832935915701544, 0.18588779926304286, 0.16832935915701544, 0.17808404810480827, 0.17808404810480827, 0.16832935915701544, 0.16832935915701544, 0.19369155042127711, 0.19369155042127711, 0.16832935915701544, 0.19369155042127711, 0.19759342600039423, 0.17808404810480827, 0.1527218568405466, 0.16052560799878085, 0.19369155042127711, 0.22295561726465624, 0.19759342600039423, 0.16052560799878085, 0.13906529231363632, 0.2073481149481874, 0.23466124400200797, 0.19369155042127711, 0.13906529231363632, 0.16052560799878085, 0.18588779926304286, 0.19759342600039423, 0.16832935915701544, 0.17808404810480827, 0.16052560799878085, 0.17808404810480827, 0.17808404810480827, 0.18588779926304286, 0.16832935915701544, 0.17808404810480827, 0.16832935915701544, 0.16832935915701544, 0.17808404810480827, 0.305548325866299, 0.3176927144541714, 0.3176927144541714, 0.3298370435997451, 0.305548325866299, 0.305548325866299, 0.2934039967207253, 0.305548325866299, 0.305548325866299, 0.3176927144541714, 0.2934039967207253, 0.26101894067229925, 0.2934039967207253, 0.3379332927512768, 0.3176927144541714, 0.23673019321770367, 0.1922008971871522, 0.3379332927512768, 0.3865108173816172, 0.3500777110602987, 0.23673019321770367, 0.20434522633272587, 0.3176927144541714, 0.3500777110602987, 0.2934039967207253, 0.2488746115267256, 0.26101894067229925, 0.3298370435997451, 0.3298370435997451, 0.3298370435997451, 0.3176927144541714, 0.305548325866299, 0.3379332927512768, 0.3379332927512768, 0.3298370435997451, 0.3298370435997451, 0.3176927144541714, 0.3298370435997451, 0.3176927144541714, 0.3298370435997451}
								,{-0.12411118960264537, -0.2475287762749193, -0.12411118960264537, -0.4916809586048525, -0.18581998293878232, 0.3078503637503133, 0.023453316201160417, 0.2461415704141764, 0.20589670519495665, 0.07979612750806804, 0.1871157680926541, -0.03288949510574726, -0.07313436032496702, 0.19516474113649804, 0.5439535730364026, 1.139577578280855, 1.0590878478424155, 0.924938297111683, -0.5158278777363844, 0.23809259737033242, 0.20589670519495665, 0.5144406718756414, 0.4607808515833484, 0.10394304663959991, 0.10394304663959991, -0.38972730004949574, -0.5158278777363844, -0.2367968122164607, 0.06369818142038018, 0.028819298230389694, 0.012721352142701805, -1.162428712258515, 0.35882719302799176, 0.13077295678574644, -0.464851048458706, -0.29850560555259764, -0.2153328840995435, 0.19516474113649804, -0.2367968122164607, 0.0395512622888483, 0.6482600553884319, 1.2901185881532127, 0.9018819680310506, 0.44536252527433723, 0.4824303432759506, 0.4609700275908061, 0.2678271864245042, 0.3263553201112621, 0.020058087150561236, -0.32525790160131157, -0.465725422449531, -0.8910298605733067, -1.1466027110054837, -1.228542098166945, -1.2578061650103243, -1.017840816894616, -0.18088850517397487, 0.3497665735859656, -0.4052463509732142, 1.297922339311447, -0.24722039001896737, 0.09419372315378835, 0.1527218568405466, 0.1527218568405466, 0.2307593684228905, 0.16832935915701544, 0.21515186610642165, 0.3048950044261176, 0.36342313811287585, 0.9526063505595742, 1.4637520514239284, 1.0150363598254495, 1.096975746986911, 0.519498161277564, 0.3263553201112621, 0.027861838308795833, -0.6978870194070048, -0.8246979757283142, -1.2578061650103243, -1.2207383470087108, -0.844118875324324, -0.2854777730320761, 0.3500777110602987, 0.47556949860616843, 1.0463549597651391, -0.3664402407704749, 0.3500777110602987, 0.13552709368413055, 0.5200989135213177, 0.4188958139877445, 0.5120026346486364, 0.5686763489882098, 0.6010613455943372, 0.6941682554186772, 0.9208631722192695, 1.6616698358392594, 2.5360645658778, 1.864076064627555, 0.3622220402058724, 1.0463549597651391, 0.13552709368413055, 0.22458586407213013, 0.23673019321770367, -0.1276009294377802, -0.002109082449611632, -0.002109082449611632, -0.43525834667003566, -0.15188967689237573, -0.6417126643687179, 0.3500777110602987, 0.8075158029824215, 1.2285205508140307, 0.2934039967207253, -1.8682941403633302, 0.14767151199315245, 0.15576776114468432, -0.20856341203675366, 0.3176927144541714, 0.20434522633272587, 0.5686763489882098}
								,{0.0918616185905206, -0.10181772895784759, -0.2151018667680247, -0.20413888484144913, -0.20413888484144913, -0.3795465833248999, -0.29915139344084235, -0.19683023219125878, -0.11278070927462855, -0.021422525658834967, 0.040701031258251266, -0.16394128855792484, 0.0735899668426122, -0.03238552207356203, -0.08354609599087628, 0.16494814509242375, 0.20514573600996602, 0.05166402767297833, -0.12374368959140954, 0.05166402767297833, 0.11378755776015446, 0.3293929035039587, -0.45263312592474914, -0.4307071706571692, 1.7874694680792182, 0.10282458817533753, -0.4635961142905032, -0.2151018667680247, 0.14302220592278989, -1.0702143915759401, 0.1247505541748815, 0.9981347457554548, -0.9971278382441268, -0.021422525658834967, -0.2881884077580793, -0.7084360196582395, -0.4635961142905032, 2.825298418071327, -0.5037937239889825, -0.08354609599087628, -0.6386108961717301, -0.6678406265100129, -0.6146957154659838, -0.6146957154659838, -0.6678406265100129, -0.5402928985324768, -0.6439253872761328, -0.6837840803138437, -0.6758123534119281, 0.38708567237487423, 0.028357571601122483, 0.2143648578021139, 0.15324802476239047, 0.15324802476239047, 0.3631704916691279, 0.08681703227768839, 0.03367212123365909, -0.04073059815295832, -0.024787339442906467, -0.16562124640800494, 0.012414117797291818, -0.30911252573626147, -0.8910491943668013, 0.5199478524380572, 1.13377160426066, 0.8866477776606135, -1.0929998368247338, 2.119609343203908, -0.8033601789363539, -1.6457068160866846, 0.07353075574323645, 1.2985206919315047, 0.30471122608634116, -1.4809576211142612, 2.156810995537885, -1.459699644991023, 0.1984214039982829, 1.9176591884804224, 0.7378420462467102, -1.2816642417669701, 1.4552155270569218, 1.6697661741542391, 1.6049961512208353, 1.544274267723772, 1.5685629854572178, 1.6130924003723672, 1.7628728759305334, 1.6616698358392594, 1.5240335705420687, 0.05456463188996176, 0.022179635283834445, 0.042420273023238725, 0.05456463188996176, 0.11123837595068446, 0.47556949860616843, 0.269115189823831, 0.5889170461699128, 0.49985821633961447, 0.4431845317211906, 0.7832269663643779, 1.0099218831649703, 1.0584994077953107, 0.1922008971871522, 0.022179635283834445, 0.8520450692918236, 0.48771391691519034, -0.3664402407704749, -0.04663846764361136, 0.13552709368413055, -1.1274875361856391, -0.8238782375849196, 0.5889170461699128, 0.7953713549522503, -0.07092718537705744, 1.1354137895954377, -0.7874451312636012, 2.171733502664615, 0.4188958139877445, 0.9653924682498208, -0.0587828265103344}
								,{-0.6365624733940436, -0.6472944374525021, -0.679490329627878, -0.6365624733940436, -0.5775366710725213, -0.5829026531017506, -0.617781536291741, -0.6365624733940436, -0.5319258238240722, -0.5050959136779257, -0.556072742955604, -0.5829026531017506, -0.5426577878825308, -0.556072742955604, -0.5668047070140627, -0.556072742955604, -0.556072742955604, -0.5265598417948429, -0.5829026531017506, -0.617781536291741, -0.5775366710725213, -0.5829026531017506, -0.5775366710725213, -0.5668047070140627, -0.556072742955604, -0.5829026531017506, -0.5775366710725213, -0.5829026531017506, -0.5668047070140627, -0.5829026531017506, -0.5829026531017506, -0.617781536291741, -0.6285135003501997, -0.6070495722332825, -0.5775366710725213, -0.5775366710725213, -0.5963176081748238, -0.6285135003501997, -0.6687583655694194, -0.6285135003501997, 0.16832935915701544, 0.1527218568405466, 0.16832935915701544, 0.1527218568405466, 0.1527218568405466, 0.14881998126142915, 0.16832935915701544, 0.21515186610642165, 0.19759342600039423, 0.17808404810480827, 0.17808404810480827, 0.16832935915701544, 0.18588779926304286, 0.18588779926304286, 0.2073481149481874, 0.18588779926304286, 0.16832935915701544, 0.18588779926304286, 0.19369155042127711, 0.18588779926304286, 0.19759342600039423, 0.17808404810480827, 0.18588779926304286, 0.17808404810480827, 0.18588779926304286, 0.19369155042127711, 0.18588779926304286, 0.19369155042127711, 0.2073481149481874, 0.19759342600039423, 0.2073481149481874, 0.19369155042127711, 0.19759342600039423, 0.17808404810480827, 0.2073481149481874, 0.17808404810480827, 0.16832935915701544, 0.14881998126142915, 0.13906529231363632, 0.1527218568405466, 0.269115189823831, 0.2934039967207253, 0.305548325866299, 0.305548325866299, 0.3176927144541714, 0.269115189823831, 0.2488746115267256, 0.2812595784117035, 0.305548325866299, 0.269115189823831, 0.23673019321770367, 0.269115189823831, 0.269115189823831, 0.2812595784117035, 0.26101894067229925, 0.22458586407213013, 0.22458586407213013, 0.20434522633272587, 0.22458586407213013, 0.2124414754842576, 0.2124414754842576, 0.20434522633272587, 0.1800564788781304, 0.16791209029025786, 0.20434522633272587, 0.1800564788781304, 0.20434522633272587, 0.20434522633272587, 0.2124414754842576, 0.2124414754842576, 0.2124414754842576, 0.20434522633272587, 0.2124414754842576, 0.14767151199315245, 0.20434522633272587, 0.15576776114468432, 0.1800564788781304, 0.22458586407213013, 0.1800564788781304, 0.20434522633272587}
								,{-0.0516704322080498, -0.38972730004949574, 0.8444485666732435, -0.2153328840995435, -0.38972730004949574, -0.2046009200410849, -0.15362409076340652, -0.022157531047288653, -0.022157531047288653, 1.3890957426400175, 1.1288456142223962, 0.471512815641807, 0.3910230852033675, 0.1871157680926541, 0.5144406718756414, 0.594930402314081, 0.7907887463809504, -0.11337922554418678, 0.1871157680926541, 0.3507782199841477, 0.5546855370948612, 0.710299015942511, 0.4929767437587243, 1.0590878478424155, 2.0356965771621485, -0.12411118960264537, 0.06369818142038018, -0.37899533599103713, -0.4514360933856327, -0.31728654265490025, 0.3695591570864504, 0.27833746258955216, 1.3059230211869632, 0.8444485666732435, 0.256873534472635, 0.0395512622888483, 1.4186086438007786, -0.30655457859644164, 0.7398119171032721, 0.2676054985310936, 1.7895586622802155, 1.052104177827063, 0.3712268892711101, -0.4735291736077655, -1.043203008158878, -1.199278031323566, -1.2656099161685588, -0.03261723316752099, -0.03261723316752099, 0.5565659792791774, -0.0911453668542789, 0.36342313811287585, 0.7458069448663621, 0.474626592117716, 1.5671517542705344, 0.7750710117097412, 0.1527218568405466, -0.34671821728645613, -0.21795632317558825, -0.39939353760453855, -0.8461582914134589, -0.07748880232736896, 0.0863899719955541, 0.34196282242773096, 1.7680983465950704, 1.3896164154207016, -0.24722039001896737, -0.8090904734118454, -0.9280976785749202, -0.9885767500512369, -0.21795632317558825, 0.2073481149481874, -0.24722039001896737, -0.10675286917074792, 0.474626592117716, 1.268658272468068, 1.4266842334223149, 0.7087391268647487, 0.5351056635940328, -0.15162443833059572, 1.6495254769725363, 0.6455907307883367, 0.953248109383098, 0.4310401431333182, 0.010035276417111407, -0.30976650859821186, -0.5809908105928039, 0.2488746115267256, 0.2488746115267256, 1.4997448528086226, 0.49985821633961447, 1.1354137895954377, 0.933007560807142, 0.010035276417111407, 0.22458586407213013, -0.5931351813479867, 0.07885337934455722, -0.002109082449611632, 0.8156118440859074, -0.026397829904207085, -0.4797877098703848, -0.2530927764259488, 0.305548325866299, 0.7144088337157825, 2.0907710111492963, 1.6130924003723672, 0.6698794485217828, 0.22458586407213013, -0.4676433373319331, -0.42311397591485284, -0.4474027174252184, 1.7061991913121095, 1.179943085625989, 0.8277562029526305, 1.5118892116753457, -0.8886482010760248, 0.47556949860616843, -1.1760650608159795, 0.7589381594674836, -0.2530927764259488}
								,{0.5449981419281226, -0.13470666990819052, 0.5851957596755749, 0.2782322893417793, 0.5157635205953972, 0.2453433537574184, 0.9031221727642773, 1.6120616864230461, -0.09085474864106662, 0.20514573600996602, 0.3184298802593215, 0.20514573600996602, 0.18687411109196772, 0.26726929292705226, 1.009097742170182, 0.3805534371764078, 0.8738876855811027, 1.8093952730993015, -0.1858672491914868, 0.4207510549238602, 0.2891952589265962, 0.7606034340121066, -0.13470666990819052, -0.010459556074018035, 0.0918616185905206, 0.7606034340121066, 0.9542827064367262, 1.1918140718398949, -0.2151018667680247, 1.100455813100353, -0.20413888484144913, 1.5937899810153175, 0.0735899668426122, -0.2370278295479795, 0.5559611383428495, 0.6363563201779341, 1.2137400110095289, 1.3562588034215197, -0.48186773920850146, 0.7606034340121066, -0.8830774479555079, -0.7874166470950114, 1.0062238762831237, 1.0673404166821787, 0.07884530537577306, -0.5030913437453891, 0.06555902884132077, 0.7218985924428792, 0.7218985924428792, 0.9477643180596685, -0.936222358999537, -0.7953884520344384, 1.1417433311625753, 0.30471122608634116, 0.535891501335667, -0.1443633795372828, 0.04164384813557477, 0.8574179497754413, 1.0141957007319287, 0.03367212123365909, -0.8166463189051605, 0.15324802476239047, 1.1922308698434467, -0.2347097088027543, 0.004442390895376486, -0.04073059815295832, 0.23030811651216576, 0.9982520518343188, 1.0141957007319287, -0.3170842526381768, -0.8538477176172251, 1.4632699746961284, 1.2161460505491928, -0.27191112702419684, 0.3259690344289296, -0.18156479775872536, -0.04073059815295832, 0.8574179497754413, 1.1550296076970272, 0.3631704916691279, -0.5607501877139743, 0.26101894067229925, 1.592851703190664, -0.844118875324324, -1.1639206425069575, -0.9372256959852159, -0.8319744867364516, -0.572894564413387, -1.0262844366520658, -0.3664402407704749, -0.7064826397482828, 0.3298370435997451, 1.2851942354324544, -1.1639206425069575, -0.5486058169587915, -1.1882093899615531, -0.6417126643687179, -0.6983863905967511, -1.8682941403633302, -0.7064826397482828, -0.5607501877139743, 0.9208631722192695, 0.2812595784117035, -0.844118875324324, -0.572894564413387, -0.7631563838090056, -0.5486058169587915, -1.151776253919085, -1.3460862038346995, -0.4595470911525162, -0.11545657057105717, 1.204231922244033, 1.4106862013052208, -1.0505731841066615, -0.26523713529267184, -1.2327387751555527, -0.5809908105928039, -0.7874451312636012, -1.5727812097987401, -0.3664402407704749}
								,{-0.38972730004949574, -0.4192402012102569, -0.37899533599103713, -0.40045926410795435, -0.41119122816641296, -0.4299721652687155, -0.38972730004949574, -0.4192402012102569, -0.3387504707718174, -0.4192402012102569, -0.28777364149413903, -0.6580264015109608, -0.5963176081748238, -0.17508801888032374, -0.4809489945463939, -0.5319258238240722, -0.47021703048793534, -0.4299721652687155, -0.5158278777363844, -0.5775366710725213, -0.5775366710725213, -0.5668047070140627, -0.5050959136779257, -0.556072742955604, -0.5265598417948429, -0.5775366710725213, -0.5265598417948429, -0.5265598417948429, -0.5426577878825308, -0.5775366710725213, -0.5319258238240722, -0.5319258238240722, -0.5050959136779257, -0.5050959136779257, -0.5158278777363844, -0.5158278777363844, -0.5050959136779257, -0.5158278777363844, -0.4916809586048525, -0.5319258238240722, 0.18588779926304286, 0.17808404810480827, 0.16052560799878085, 0.16832935915701544, 0.18588779926304286, 0.18588779926304286, 0.16052560799878085, 0.16052560799878085, 0.14881998126142915, 0.17808404810480827, 0.12345778999716747, 0.19369155042127711, 0.22295561726465624, 0.16832935915701544, 0.16052560799878085, 0.16052560799878085, 0.13906529231363632, 0.1527218568405466, 0.22295561726465624, 0.23466124400200797, 0.19369155042127711, 0.19369155042127711, 0.19369155042127711, 0.19369155042127711, 0.2073481149481874, 0.2073481149481874, 0.18588779926304286, 0.19759342600039423, 0.19369155042127711, 0.2073481149481874, 0.21515186610642165, 0.22295561726465624, 0.19759342600039423, 0.16832935915701544, 0.18588779926304286, 0.19369155042127711, 0.19759342600039423, 0.19759342600039423, 0.17808404810480827, 0.14881998126142915, 0.3298370435997451, 0.3298370435997451, 0.305548325866299, 0.3176927144541714, 0.3622220402058724, 0.3622220402058724, 0.3622220402058724, 0.39460700709085017, 0.3622220402058724, 0.3379332927512768, 0.269115189823831, 0.4310401431333182, 0.2488746115267256, 0.3865108173816172, 0.0990940170839615, 0.2934039967207253, 0.22458586407213013, 0.13552709368413055, 0.269115189823831, 0.23673019321770367, 0.2488746115267256, 0.22458586407213013, 0.20434522633272587, 0.1922008971871522, 0.1800564788781304, 0.20434522633272587, 0.14767151199315245, 0.20434522633272587, 0.1800564788781304, 0.1922008971871522, 0.14767151199315245, 0.16791209029025786, 0.12338279425970639, 0.14767151199315245, 0.14767151199315245, 0.14767151199315245, 0.16791209029025786, 0.16791209029025786, 0.13552709368413055, 0.14767151199315245}
								,{3.618287266837355, 0.9140851691790044, 0.29650391425977757, -2.334611549577029, 0.9031221727642773, -0.832683133492412, 1.2137400110095289, 1.7984322766845742, 2.076161179345465, -0.45263312592474914, -0.08354609599087628, -0.2772254274412984, -0.31742302640781367, 3.4648054243508164, -1.201770214403114, 2.065198209760648, 0.7606034340121066, -0.3393489870413756, -2.312685529917665, -2.239599164395223, 1.6120616864230461, 0.3403558194289554, 1.4695429208409652, -0.8217201370776849, -0.10181772895784759, -2.3419202317401204, 3.771768975174343, -1.201770214403114, 1.644950595177497, 1.6047530579197746, 1.4585799244262379, -1.3479432137471004, 0.8227269909291928, 0.596158756090302, 1.100455813100353, 1.3452957801768826, 1.9738402193202078, 0.9250481924236417, 2.291766337279898, 4.33818956227157, 1.8273124300086376, -1.0557984186032914, -1.4065547534563716, 2.156810995537885, -1.1674027122863746, -0.8777629958698608, 0.7511283227811623, 1.1550296076970272, -1.5208163024463452, 1.946888333537369, 2.1488390735421907, -0.08590397738885075, -2.1691841001272323, 2.1488390735421907, 0.23562266614470237, -1.228519350232319, -1.4969010905255942, 2.156810995537885, -3.867163803135493, 0.20639313090019856, 2.090380003053183, -0.6439253872761328, -1.714795192640171, 2.098351729955098, 2.156810995537885, 0.7909869572907392, 1.7396236291813467, 0.5066615759036053, -1.5872474236929413, 1.4260685174559302, -0.06198860158932559, 0.6182659476242001, -0.5190348950961093, -0.6598688996080974, 2.053178350719206, -0.8033601789363539, -0.6758123534119281, 0.7750435034869082, -1.3932685159406755, 1.1550296076970272, 0.3379332927512768, 0.6820238668308047, 0.8520450692918236, -0.30976650859821186, 0.14767151199315245, 0.22458586407213013, -1.3784711707196775, 1.7385843068028346, -0.30976650859821186, -2.1435665817942624, 0.3298370435997451, 1.6373811181058133, -3.0543944775964205, 0.2934039967207253, 0.6698794485217828, 0.030275914156515683, 0.2812595784117035, 0.6455907307883367, -4.944868520733929, -2.4269352426555773, -0.4676433373319331, 0.7022644451279101, 0.2812595784117035, -1.6658880304596317, 0.5686763489882098, -2.200240296133836, -0.07092718537705744, 0.6253501227700821, 0.16791209029025786, 2.8882515674357565, -1.6537436121506102, 0.7022644451279101, 1.0463549597651391, -0.6740976550306154, -0.08307154424378048, 0.23673019321770367, -2.0180747645272437, 1.4106862013052208, -0.2530927764259488, 0.305548325866299}
};

int test_data_output[NUM_TESTS] = {4,4,0,2,0,3,5,0,1,1,1,1,3,2,0,3,4,1,3,0,5,3,1};
char string_Action[6][20]={"Walking", "Jogging", "Upstairs", "Downstairs", "Sitting", "Standing"};
enum e_ACTION_CLASSIFICATION{Walking=0, Jogging, Upstairs, Downstairs, Sitting, Standing};


#ifndef NO_UBX_LIB_PRESENT
// Echo server URL and port number
// HTTPS server URL: A test server that accepts PUT/POST
#define MY_SERVER_NAME ""// Some data to PUT and GET with the server.
#define USERNAME ""
#define PASSWORD ""
#define FILENAME_HTTP_RESPONSE "ubxlibhttp_0"
#define FILENAME_HTTP_POST_PUT "ubxlibhttp_0_putpost"
const char *gpMyData = "Hello ML user in microcontroller's world!";

// Cellular configuration.
// Set U_CFG_TEST_CELL_MODULE_TYPE to your module type,
// chosen from the values in cell/api/u_cell_module_type.h
//
// Note that the pin numbers are those of the MCU: if you
// are using an MCU inside a u-blox module the IO pin numbering
// for the module is likely different that from the MCU: check
// the data sheet for the module to determine the mapping.

// DEVICE i.e. module/chip configuration: in this case a cellular
// module connected via UART
static const uDeviceCfg_t gDeviceCfg = {
		0, U_DEVICE_TYPE_CELL,
		{
		  {
		    0,
			U_CELL_MODULE_TYPE_SARA_R5,//U_CFG_TEST_CELL_MODULE_TYPE,
		    //"1234", /* SIM pin */
		    NULL, /* SIM pin */
		    U_CFG_APP_PIN_CELL_ENABLE_POWER,
		    U_CFG_APP_PIN_CELL_PWR_ON,
		    U_CFG_APP_PIN_CELL_VINT,
		    U_CFG_APP_PIN_CELL_DTR
		  },
		},
		U_DEVICE_TRANSPORT_TYPE_UART,
    		{
		  {
		  0,
		  U_CFG_APP_CELL_UART,
		  U_CELL_UART_BAUD_RATE,
		  U_CFG_APP_PIN_CELL_TXD,
		  U_CFG_APP_PIN_CELL_RXD,
		  U_CFG_APP_PIN_CELL_CTS,
		  U_CFG_APP_PIN_CELL_RTS
		  },
	    },
    	};
// NETWORK configuration for cellular
static const uNetworkCfgCell_t gNetworkCfg = {
    	0,
	U_NETWORK_TYPE_CELL,
    	NULL, /* APN: NULL to accept default.  If using a Thingstream SIM enter "tsiot" here */
    	240 /* Connection timeout in seconds */
    // There is an additional field here "pKeepGoingCallback",
    // which we do NOT set, we allow the compiler to set it to 0
    // and all will be fine. You may set the field to a function
    // of the form "bool keepGoingCallback(uDeviceHandle_t devHandle)",
    // e.g.:
    // .pKeepGoingCallback = keepGoingCallback
    // ...and your function will be called periodically during an
    // abortable network operation such as connect/disconnect;
    // if it returns true the operation will continue else it
    // will be aborted, allowing you immediate control.  If this
    // field is set, timeoutSeconds will be ignored.
};

static const uNetworkType_t gNetType = U_NETWORK_TYPE_CELL;
#endif //NO_UBX_LIB_PRESENT

// Globals, used for compatibility with Arduino-style sketches.
// Globals, used for compatibility with Arduino-style sketches.
namespace {
tflite::ErrorReporter*  tflErrorReporter = nullptr;
const tflite::Model* tflModel = nullptr;
tflite::MicroInterpreter* tflInterpreter = nullptr;
TfLiteTensor* tflInputTensor = nullptr;
TfLiteTensor* tflOutputTensor = nullptr;

constexpr int kTensorArenaSize = 10000;
uint8_t tensor_arena[kTensorArenaSize];
}  // namespace

/* Private includes --------inference_count------------------------------------------------*/
const int c_stack_size_TinyML = 500;
const int c_file_buffer_size = 3000;
char file_buffer[c_file_buffer_size];

// Expose a C friendly interface for main functions.
// Initializes all data needed for the example. The name is important, and needs
// to be setup() for Arduino compatibility.
void setup();

// Runs one iteration of data gathering and inference. This should be called
// repeatedly from the application code. The name needs to be loop() for Arduino
// compatibility.
void loop();

void handle_output(tflite::ErrorReporter* error_reporter, float x_value, float y_value);
#endif //# HAL_DRIVERS_ONLY

/* Private variables ---------------------------------------------------------*/


osThreadId Task1Handle;
osThreadId Task2Handle;
osSemaphoreId myBinarySem01Handle;
uDeviceHandle_t devHandle = NULL;

/* Private function prototypes -----------------------------------------------*/
void SystemClock_Config(void);
static void MX_GPIO_Init(void);

void StartDefaultTask(void const * argument);
void StartTask02(void const * argument);

#ifndef HAL_DRIVERS_ONLY
void HandleOutput(tflite::ErrorReporter* error_reporter, float x_value, float y_value)
{
	// Log the current X and Y values
	TF_LITE_REPORT_ERROR(error_reporter, "x_value: %f, y_value: %f\n", x_value, y_value);
}
#endif // HAL_DRIVERS_ONLY

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
  const int length = 27;
  char current_char = '*';
  char my_buffer[length];
  setup();
  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* Configure the system clock */
  SystemClock_Config();

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_USB_DEVICE_Init();

  my_buffer[length-1] = '\n';
  
  for(int index=0; index < length-1; index++)
  {
    my_buffer[index] = current_char++;

    CDC_Transmit_FS((uint8_t *)my_buffer, length);
  }
  /* USER CODE BEGIN 2 */

  /* Create the semaphores(s) */
  myBinarySem01Handle = xSemaphoreCreateBinary();

  /* Create the thread(s) */
  /* definition and creation of Task1 */
  osThreadDef(Task1, StartDefaultTask, osPriorityNormal, 0, c_stack_size_TinyML);
  Task1Handle = osThreadCreate(osThread(Task1), NULL);

  /* definition and creation of Task2 */
  osThreadDef(Task2, StartTask02, osPriorityNormal, 0, c_stack_size_TinyML);
  Task2Handle = osThreadCreate(osThread(Task2), NULL);


  /* Start scheduler */
  osKernelStart();

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  while (1)
  {
  }
}

/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 192;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 6;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  {
    Error_Handler();
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV4;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
  {
    Error_Handler();
  }
}

/**
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOA_CLK_ENABLE();
  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);

  /*Configure GPIO pin : PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}



void send_data_to_server(const char *activity)
{
  uHttpClientContext_t *pContext = NULL;
  uHttpClientConnection_t connection = U_HTTP_CLIENT_CONNECTION_DEFAULT;
  uSecurityTlsSettings_t tlsSettings = U_SECURITY_TLS_SETTINGS_DEFAULT;
  char serialNumber[U_SECURITY_SERIAL_NUMBER_MAX_LENGTH_BYTES];
  char path[U_SECURITY_SERIAL_NUMBER_MAX_LENGTH_BYTES + 30];
  int32_t statusCode = 0;

  snprintf(path, sizeof(path), "/test/plain/ubx_http_request_echo.php?method=post");

  // Set the URL of the server; each instance
  // is associated with a single server -
  // you may create more than one insance,
  // for different servers, or close and
  // open instances to access more than one
  // server.  There are other settings in
  // uHttpClientConnection_t, but for the
  // purposes of this example they can be
  // left at defaults
  connection.pServerName = MY_SERVER_NAME;
  connection.pUserName = USERNAME;
  connection.pPassword = PASSWORD;
  connection.timeoutSeconds = 180;

  // Create an HTTPS instance for the server; to
  // create an HTTP instance instead you would
  // replace &tlsSettings with NULL (and of
  // course use port 8080 on the test HTTP server).
  //pContext = pUHttpClientOpen(devHandle, &connection, &tlsSettings);
  pContext = pUHttpClientOpen(devHandle, &connection, NULL);
  if (pContext != NULL) {
      int32_t file_size;

      // Note: since devHandle is a cellular
      // handle, any of the `cell` API calls could
      // be made here using it.

      // In order to create a unique path on the public
      // server which won't collide with anyone else,
      // we make the path the serial number of the
      // module
      uSecurityGetSerialNumber(devHandle, serialNumber);

      // POST some data to the server; doesn't have to be text,
      // can be anything, including binary data, though obviously
      // you must give the appropriate content-type
      statusCode = uHttpClientPostRequest(pContext, path,  activity, strlen(activity),
                   "text/plain", NULL, NULL, NULL);
      if (statusCode == 200) {
          uPortLog("POST some data to the file \"%s\" on %s.\n", path, MY_SERVER_NAME);
          file_size = uCellFileSize(devHandle, FILENAME_HTTP_RESPONSE);
          uPortLog("%s size = %d!\n", FILENAME_HTTP_RESPONSE, file_size);
          uCellFileRead(devHandle, FILENAME_HTTP_RESPONSE, file_buffer, file_size);

          file_size = uCellFileSize(devHandle, FILENAME_HTTP_POST_PUT);
          uPortLog("%s size = %d!\n",FILENAME_HTTP_POST_PUT,file_size);
          uCellFileRead(devHandle, FILENAME_HTTP_POST_PUT, file_buffer, file_size);
      } else {
          uPortLog("Unable to POST file \"%s\" to %s; status code was %d!\n",
                   path, MY_SERVER_NAME, statusCode);
      }
      // Close the HTTP instance again
      uHttpClientClose(pContext);

  } else {
      uPortLog("Unable to create HTTP instance!\n");
  }
}

/* USER CODE BEGIN Header_StartDefaultTask */
/**
  * @brief  Function implementing the Task1 thread.
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
  unsigned char ch='-';
  UBaseType_t uxHighWaterMark;
#ifndef NO_UBX_LIB_PRESENT
  uPortGpioConfig_t gpioConfig = U_PORT_GPIO_CONFIG_DEFAULT;
  int32_t returnCode;

  uPortLog("StartDefaultTask called\n");

  uPortInit();

  uPortLog("uPortInit successfull\n");
#if !defined (STM32F405xx)

  // Enable power to 3V3 rail for the C030 board
  gpioConfig.pin = U_CFG_APP_PIN_C030_ENABLE_3V3;
  gpioConfig.driveMode = U_PORT_GPIO_DRIVE_MODE_OPEN_DRAIN;
  gpioConfig.direction = U_PORT_GPIO_DIRECTION_OUTPUT;
  uPortGpioConfig(&gpioConfig);
  uPortGpioSet(U_CFG_APP_PIN_C030_ENABLE_3V3, 1);


  // Make sure the PWR_ON pin is initially high
  // BEFORE taking the module out of reset: this
  // ensures that it powers on from reset which
  // permits FW update on SARA-R5
  uPortGpioSet(U_CFG_APP_PIN_CELL_PWR_ON, 1);
  gpioConfig.direction = U_PORT_GPIO_DIRECTION_OUTPUT;
  gpioConfig.driveMode = U_PORT_GPIO_DRIVE_MODE_NORMAL;
  gpioConfig.pin = U_CFG_APP_PIN_CELL_PWR_ON;
  uPortGpioConfig(&gpioConfig);
  uPortGpioSet(U_CFG_APP_PIN_CELL_PWR_ON, 1);

  // Set reset high (i.e. not reset) if it is connected
  gpioConfig.pin = U_CFG_APP_PIN_CELL_RESET;
  gpioConfig.driveMode = U_PORT_GPIO_DRIVE_MODE_NORMAL;
  gpioConfig.direction = U_PORT_GPIO_DIRECTION_OUTPUT;
  uPortGpioConfig(&gpioConfig);
  uPortGpioSet(U_CFG_APP_PIN_CELL_RESET, 1);

#endif //STM32F405xx

  osDelay(1000);

  uDeviceInit();
  uPortLog("uDeviceInit successfull\n");

  returnCode = uDeviceOpen(&gDeviceCfg, &devHandle);
  uPortLog("Opened device with return code %d.\n", returnCode);

#endif //NO_UBX_LIB_PRESENT
  /* Inspect our own high water mark on entering the task. */
  uxHighWaterMark = uxTaskGetStackHighWaterMark( NULL );
  printf("StartDefaultTask:: MAX_Stack_SZ:%d, uxHighWaterMark:%ld\n", c_stack_size_TinyML, uxHighWaterMark);
#ifndef NO_UBX_LIB_PRESENT
  uCellPwrIsAlive(devHandle);
#endif //NO_UBX_LIB_PRESENT

  // Bring up the network interface
  uPortLog("Bringing up the network...\n");
  if (uNetworkInterfaceUp(devHandle, gNetType,
						  &gNetworkCfg) == 0) {

      send_data_to_server(gpMyData);
  } else {
      uPortLog("Unable to bring up the network!\n");
  }
  uPortLog("Done.\n");
  xSemaphoreGive( myBinarySem01Handle);
  /* Infinite loop */
  while (true)
  {
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_15);
	HAL_Delay(100);
  }

/*  // Close the device
  // Note: we don't power the device down here in order
  // to speed up testing; you may prefer to power it off
  // by setting the second parameter to true.
  uDeviceClose(devHandle, false);
  // Tidy up
  uDeviceDeinit();
  uPortDeinit();
*/
}

/* USER CODE BEGIN Header_StartTask02 */
/**
* @brief Function implementing the Task2 thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTask02 */
void StartTask02(void const * argument)
{
  unsigned char ch='>';
  UBaseType_t uxHighWaterMark;

  xSemaphoreTake( myBinarySem01Handle, 0xFFFF );
  /* USER CODE BEGIN StartTask02 */
  /* Infinite loop */
  for(;;)
  {
	loop();
	/* Inspect our own high water mark on entering the task. */
	uxHighWaterMark = uxTaskGetStackHighWaterMark( NULL );
	printf("MAX_Stack_SZ:%ld, uxHighWaterMark:%ld\n",c_stack_size_TinyML, uxHighWaterMark);

	osDelay(10);
  }
  /* USER CODE END StartTask02 */
}

/**
  * @brief  Period elapsed callback in non blocking mode
  * @note   This function is called  when TIM6 interrupt took place, inside
  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  if (htim->Instance == TIM6) {
    HAL_IncTick();
  }
}

/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
  {
  }
  /* USER CODE END Error_Handler_Debug */
}

#ifdef  USE_FULL_ASSERT
/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{

}
#endif /* USE_FULL_ASSERT */


#ifndef HAL_DRIVERS_ONLY
// The name of this function is important for Arduino compatibility.
void setup() {
  // put your setup code here, to run once:
  static tflite::MicroErrorReporter micro_error_reporter;
  tflErrorReporter = &micro_error_reporter;

   tflModel = tflite::GetModel(model_tflite);
   if (tflModel->version() != TFLITE_SCHEMA_VERSION) {
	tflErrorReporter->Report(
		"Model provided is schema version %d not equal "
		"to supported version %d.",
		tflModel->version(), TFLITE_SCHEMA_VERSION);
    return;
  }

  static tflite::AllOpsResolver resolver;

  static tflite::MicroInterpreter static_interpreter(tflModel, resolver, tensor_arena, kTensorArenaSize, tflErrorReporter);
  tflInterpreter = &static_interpreter;

  tflInterpreter->AllocateTensors();
  tflInputTensor = tflInterpreter->input(0);
  tflOutputTensor = tflInterpreter->output(0);
}

void print_classification(int prediction, int actual_output, int test_num)
{
	printf("[test_num:%d]Action classified as %s in actual it was %s\n", test_num, string_Action[prediction], string_Action[actual_output]);
}

// The name of this function is important for Arduino compatibility.
void loop() {
	const int READINGS_PER_SAMPLE = 40;
	int index_test_Data = 0, prediction=0, usable_buffer_size = c_file_buffer_size-1, used_buffer_size=0;
	static int index_test=0, index;

	printf("**************Test Start*****************\n");
	used_buffer_size = snprintf(file_buffer,usable_buffer_size-used_buffer_size,"[");

	for(int i =0; i< READINGS_PER_SAMPLE; i++){
		// Quantize the input from floating-point to integer
		// Place the quantized input in the model's input tensor
		tflInputTensor->data.int8[i * 3 + 0] = test_data[index_test % NUM_TESTS][index_test_Data++]/ tflInputTensor->params.scale + tflInputTensor->params.zero_point;
		tflInputTensor->data.int8[i * 3 + 1] = test_data[index_test % NUM_TESTS][index_test_Data++]/ tflInputTensor->params.scale + tflInputTensor->params.zero_point;
		tflInputTensor->data.int8[i * 3 + 2] = test_data[index_test % NUM_TESTS][index_test_Data++]/ tflInputTensor->params.scale + tflInputTensor->params.zero_point;
		used_buffer_size = snprintf(file_buffer,usable_buffer_size-used_buffer_size,"%s[%f,%f,%f] ", file_buffer, test_data[index_test % NUM_TESTS][index_test_Data-3]
																												, test_data[index_test % NUM_TESTS][index_test_Data-2]
																												, test_data[index_test % NUM_TESTS][index_test_Data-1]
																												);
		osDelay(50);
	}
	used_buffer_size = snprintf(file_buffer,usable_buffer_size-used_buffer_size,"%s]", file_buffer);
	TfLiteStatus invokeStatus = tflInterpreter->Invoke();
	if (invokeStatus != kTfLiteOk) {
	TF_LITE_REPORT_ERROR(tflErrorReporter, "Invoke failed with %d\n", invokeStatus);
	return;
	}
	for(index = 1; index < 6; index++)
	{
		if(tflOutputTensor->data.int8[prediction] < tflOutputTensor->data.int8[index])
			prediction = index;
	}
	print_classification(prediction, test_data_output[index_test % NUM_TESTS],index_test % NUM_TESTS);

	printf("Size:%d, %s\n", used_buffer_size, file_buffer);

	send_data_to_server(file_buffer);

#ifdef FIRMWARE_DEBUG_MODE
	for(index = 0; index < 6; index++)
	{
		printf("[Test Action: %d] Classified to be %s as : %d\n", index_test % NUM_TESTS, string_Action[index],tflOutputTensor->data.int8[index]);
	}
#endif
	printf("**************Test End*****************\n\n");

	index_test++;
}
#endif // HAL_DRIVERS_ONLY
